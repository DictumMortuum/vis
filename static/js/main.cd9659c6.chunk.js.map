{"version":3,"sources":["Wishlist.js","App.js","reportWebVitals.js","index.js"],"names":["Text","props","s","URL","_","isValidHttpUrl","Desc","href","Title","ListItem","useState","Status","have","setHave","isSending","setIsSending","sendRequest","useCallback","a","status","fetch","method","body","JSON","stringify","className","onClick","Id","List","owner","items","sort","b","map","wish","transform","wishes","data","undefined","Owner","id","CalendarId","push","Object","keys","w","App","setWishes","useEffect","then","results","json","console","log","catch","error","wishlist","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAwBMA,EAAO,SAAAC,GACX,OAtBqB,SAAAC,GACrB,IACE,IAAIC,IAAID,GACR,MAAOE,GACP,OAAO,EAGT,OAAO,EAeFC,CAAeJ,EAAMK,MAGjB,mBAAGC,KAAMN,EAAMK,KAAf,SAAsBL,EAAMO,QAF5B,+BAAOP,EAAMO,SAMlBC,EAAW,SAAAR,GAAU,IAAD,EACAS,mBAA0B,aAAjBT,EAAMU,QADf,mBACjBC,EADiB,KACXC,EADW,OAEUH,oBAAS,GAFnB,mBAEjBI,EAFiB,KAENC,EAFM,KAIlBC,EAAcC,sBAAW,sBAAC,4BAAAC,EAAA,yDACxBC,EAASP,EAAO,YAAc,YAEhCE,EAH0B,wDAO9BC,GAAa,GAPiB,SASxBK,MAAM,yEAA0E,CACpFC,OAAQ,OACRC,KAAMC,KAAKC,UAAL,2BACDvB,GADC,IAEJkB,OAAQA,OAbkB,OAiB9BJ,GAAa,GACbF,GAASD,GAlBqB,2CAmB7B,CAACE,EAAWb,EAAOW,IAEtB,OACE,qBAAIa,UAAWb,EAAO,SAAW,YAAjC,UACE,cAAC,EAAD,eAAUX,IACV,wBAAQyB,QAASV,EAAjB,SAA+BJ,EAAO,WAAa,gBAFFX,EAAM0B,KAO9CC,EApDF,SAAA3B,GACX,OACE,sBAAKwB,UAAU,WAAf,UACE,+BAAKxB,EAAM4B,MAAX,kBACA,6BACG5B,EAAM6B,MAAMC,MAAK,SAACb,EAAGc,GAAJ,OAAUd,EAAES,GAAKK,EAAEL,MAAIM,KAAI,SAAAC,GAAI,OAAIzB,EAASyB,Y,eCThEC,EAAY,SAAAC,GAChB,IAAMC,EAAO,GAeb,OAbAD,EAAOH,KAAI,SAAAC,GAUT,YATyBI,IAArBD,EAAKH,EAAKK,SACZF,EAAKH,EAAKK,OAAS,GACnBF,EAAKH,EAAKK,OAAOC,GAAKN,EAAKO,WAC3BJ,EAAKH,EAAKK,OAAOV,MAAQK,EAAKK,MAC9BF,EAAKH,EAAKK,OAAOT,MAAQ,IAG3BO,EAAKH,EAAKK,OAAOT,MAAMY,KAAKR,GAErBA,KAGFS,OAAOC,KAAKP,GAAMJ,KAAI,SAAAY,GAAC,OAAIR,EAAKQ,OA2B1BC,EAxBH,WAAO,IAAD,EACYpC,mBAAS,IADrB,mBACT0B,EADS,KACDW,EADC,KAehB,OAZAC,qBAAU,WACR5B,MAAM,0EACH6B,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAZ,GACJe,QAAQC,IAAIhB,GACZU,EAAUV,MAEXiB,OAAM,SAAAC,GACLH,QAAQC,IAAIE,QAEf,IAGD,cAAC,IAAD,UACE,cAAC,IAAD,UACGpB,EAAUC,GAAQH,KAAI,SAAAuB,GAAQ,OAAI,cAAC,IAAD,CAAyBC,KAAM,IAAMD,EAAS3B,MAAO6B,UAAW,kBAAM,cAAC,EAAD,eAAUF,MAApEA,EAAShB,YClCjDmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cd9659c6.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport './Wishlist.css';\n\nconst isValidHttpUrl = s => {\n  try {\n    new URL(s)\n  } catch (_) {\n    return false\n  }\n\n  return true\n}\n\nconst List = props => {\n  return (\n    <div className=\"wishlist\">\n      <h2>{props.owner}'s wishlist!</h2>\n      <ul>\n        {props.items.sort((a, b) => a.Id < b.Id).map(wish => ListItem(wish))}\n      </ul>\n    </div>\n  );\n}\n\nconst Text = props => {\n  if (!isValidHttpUrl(props.Desc)) {\n    return <span>{props.Title}</span>\n  } else {\n    return <a href={props.Desc}>{props.Title}</a>\n  }\n}\n\nconst ListItem = props => {\n  const [have, setHave] = useState(props.Status === \"RESERVED\");\n  const [isSending, setIsSending] = useState(false)\n\n  const sendRequest = useCallback(async() => {\n    const status = have ? \"AVAILABLE\" : \"RESERVED\"\n\n    if (isSending) {\n      return\n    }\n\n    setIsSending(true)\n\n    await fetch('https://0jq009rhqf.execute-api.eu-north-1.amazonaws.com/default/servus', {\n      method: \"POST\",\n      body: JSON.stringify({\n        ...props,\n        status: status,\n      })\n    })\n\n    setIsSending(false)\n    setHave(!have)\n  }, [isSending, props, have])\n\n  return (\n    <li className={have ? 'active' : 'notactive'} key={props.Id}>\n      <Text {...props} />\n      <button onClick={sendRequest}>{have ? 'Reserved' : 'Available'}</button>\n    </li>\n  )\n}\n\nexport default List;\n","import './App.css';\nimport List from './Wishlist';\nimport React, { useEffect, useState } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nconst transform = wishes => {\n  const data = {}\n\n  wishes.map(wish => {\n    if (data[wish.Owner] === undefined) {\n      data[wish.Owner] = {}\n      data[wish.Owner].id = wish.CalendarId\n      data[wish.Owner].owner = wish.Owner\n      data[wish.Owner].items = []\n    }\n\n    data[wish.Owner].items.push(wish)\n\n    return wish\n  })\n\n  return Object.keys(data).map(w => data[w])\n}\n\nconst App = () => {\n  const [wishes, setWishes] = useState([]);\n\n  useEffect(() => {\n    fetch('https://0jq009rhqf.execute-api.eu-north-1.amazonaws.com/default/servus')\n      .then(results => results.json())\n      .then(data => {\n        console.log(data)\n        setWishes(data)\n      })\n      .catch(error => {\n        console.log(error)\n      });\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        {transform(wishes).map(wishlist => <Route key={wishlist.id} path={\"/\" + wishlist.owner} component={() => <List {...wishlist} />} />)}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}